/*
 * Copyright (c) 2023 The ZMK Contributors
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>

// Layers
#define QW_M    0       // Main
#define QW_L    1       // Lower
#define QW_R    2       // Numblock
#define QC_B    3       // Firmware


/*
 * Assign the cs-gpios pin to 4.
 * Uncomment these next few lines if implementing nice!view Displays.
 */
//nice_view_spi: &spi0 {
//  cs-gpios = <&pro_micro 4 GPIO_ACTIVE_HIGH>;
//};

/ {
    behaviors {
        bspc_del: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp DELETE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_RSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = " QWERTY";
            bindings = <
&kp ESC    &kp 1      &kp 2      &kp 3      &kp 4          &kp 5            &kp 6          &kp 7      &kp 8      &kp 9      &kp 0        &kp GRAVE
&kp TAB    &kp Q      &kp W      &kp E      &kp R          &kp T            &kp Y          &kp U      &kp I      &kp O      &kp P        &kp BSLH
&kp LSHFT  &kp A      &kp S      &kp D      &kp F          &kp G            &kp H          &kp J      &kp K      &kp L      &kp SEMI     &kp SQT
&kp LCTRL  &kp Z      &kp X      &kp C      &kp V          &kp B            &kp N          &kp M      &kp COMMA  &kp DOT    &kp FSLH     &bspc_del
           &lt 3 LALT &kp SPACE  &kp RET    &lt 1 MINUS    &kp LWIN         &lt 2 EQUAL    &kp RSHFT  &mkp LCLK  &mkp MCLK  &mkp RCLK
            >;
        };

        lower_layer {
            display-name = " Lower";
            bindings = <
&kp F1     &kp F2     &kp F3     &kp F4     &kp F5         &kp F6           &kp F7         &kp F8     &kp F9     &kp F10    &kp F11      &kp F12
&trans     &trans     &trans     &kp C_NEXT &kp C_VOL_UP   &kp LBKT         &kp PG_UP      &kp HOME   &kp UP     &kp END    &trans       &trans
&trans     &trans     &trans     &kp C_PP   &kp C_VOL_DN   &kp RBKT         &kp PG_DN      &kp LEFT   &kp DOWN   &kp RIGHT  &kp CAPS     &trans
&trans     &trans     &trans     &kp C_PREV &kp C_MUTE     &trans           &trans         &trans     &kp PSCRN  &trans     &trans       &trans
           &trans     &trans     &trans     &trans         &trans           &trans         &trans     &trans     &trans     &trans
            >;
        };

        Numblock_layer {
            display-name = " Numblock";
            bindings = <
&trans     &trans     &kp KP_N7  &kp KP_N8  &kp KP_N9      &kp KP_MINUS     &trans         &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_MINUS      &trans
&trans     &trans     &kp KP_N4  &kp KP_N5  &kp KP_N6      &kp KP_PLUS      &trans         &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp KP_PLUS       &trans
&trans     &trans     &kp KP_N1  &kp KP_N2  &kp KP_N3      &kp KP_DIVIDE    &trans         &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_DIVIDE     &trans
&trans     &trans     &kp KP_N0  &kp KP_EQUAL &kp KP_DOT   &kp KP_MULTIPLY  &trans         &kp KP_N0  &kp KP_EQUAL &kp KP_DOT &kp KP_MULTIPLY &trans
           &trans     &trans     &trans     &trans         &trans           &trans         &trans     &trans     &trans     &trans
            >;
        };

        ble_layer {
            display-name = " BLE";
            bindings = <

&sys_reset     &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3        &bt BT_SEL 4          &bt BT_DISC 0        &bt BT_DISC 1    &bt BT_DISC 2    &bt BT_DISC 3    &bt BT_DISC 4           &sys_reset
&bootloader    &trans     &trans     &trans     &bt BT_NXT         &trans           &trans         &trans     &trans     &trans     &trans            &bootloader
&trans     &trans     &kp C_SLEEP &trans    &trans         &out OUT_USB           &trans         &trans     &trans     &trans     &trans            &trans
&bt BT_CLR &trans     &trans     &trans     &bt BT_PRV     &out OUT_BLE           &trans         &trans     &trans     &trans     &trans            &bt BT_CLR_ALL
           &trans     &trans     &trans     &trans         &trans           &trans         &trans     &trans     &trans     &trans

            >;
        };

    };
};
